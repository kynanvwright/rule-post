import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart'; // ðŸ‘ˆ this is generated by flutterfire configure

// Screens
import 'auth/screens/login_screen.dart';
import 'content/screens/home_screen.dart';


Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();

  // âœ… If using Firebase, uncomment:
  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);

  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  static final GoRouter _router = GoRouter(
    initialLocation: '/login',
    routes: [
      // Public login page (no app scaffold)
      GoRoute(
        path: '/login',
        builder: (_, __) => const LoginScreen(),
      ),

      // Keep old /home calls working â†’ redirect to default category
      GoRoute(
        path: '/home',
        redirect: (_, __) => '/enquiries/all',
      ),

      // Visiting /enquiries with no category â†’ redirect to default
      GoRoute(
        path: '/enquiries',
        redirect: (_, __) => '/enquiries/all',
      ),

      // Three-pane list only (no item selected)
      GoRoute(
        path: '/enquiries/:category',
        builder: (context, state) {
          final raw = state.pathParameters['category'] ?? 'all';
          // Normalise to a safe default
          const allowed = {'all', 'mine', 'open', 'closed'};
          final category = allowed.contains(raw) ? raw : 'all';
          return HomeScreen(category: category);
        },
      ),

      // Three-pane with detail open
      GoRoute(
        path: '/enquiries/:category/:enquiryId',
        builder: (context, state) {
          final raw = state.pathParameters['category'] ?? 'all';
          const allowed = {'all', 'mine', 'open', 'closed'};
          final category = allowed.contains(raw) ? raw : 'all';
          final enquiryId = state.pathParameters['enquiryId']!; // non-null here
          return HomeScreen(category: category, enquiryId: enquiryId);
        },
      ),
    ],

    // ðŸ”’ (Optional) auth guard â€” leave commented for now
    // redirect: (context, state) {
    //   final loggedIn = FirebaseAuth.instance.currentUser != null;
    //   final loggingIn = state.matchedLocation == '/login';
    //   if (!loggedIn && !loggingIn) return '/login';
    //   if (loggedIn && loggingIn) return '/home';
    //   return null;
    // },
  );

  @override
  Widget build(BuildContext context) {
    return MaterialApp.router(
      debugShowCheckedModeBanner: false,
      title: 'Rule Enquiries App',
      routerConfig: _router,
    );
  }
}
